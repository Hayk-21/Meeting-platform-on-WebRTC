{"version":3,"sources":["hooks/useStateWithCallback.js","socket/index.js","hooks/useWebRTC.js","pages/Room/index.js","pages/Main/index.js","pages/NotFound404/index.js","App.js","index.js","socket/actions.js"],"names":["useStateWithCallback","initialState","useState","state","setState","cbRef","useRef","updateState","useCallback","newState","cb","current","prev","useEffect","socket","io","reconnectionAttempts","timeout","transports","LOCAL_VIDEO","Room","roomID","clients","updateClients","addNewClient","newClient","list","includes","peerConnections","localMediaStream","peerMediaElements","a","peerID","createOffer","console","warn","RTCPeerConnection","iceServers","freeice","onicecandidate","event","candidate","emit","ACTIONS","RELAY_ICE","iceCandidate","tracksNumber","ontrack","remoteStream","streams","srcObject","settled","interval","setInterval","clearInterval","getTracks","forEach","track","addTrack","offer","setLocalDescription","RELAY_SDP","sessionDescription","on","ADD_PEER","off","remoteDescription","setRemoteDescription","RTCSessionDescription","type","createAnswer","answer","SESSION_DESCRIPTION","ICE_CANDIDATE","addIceCandidate","RTCIceCandidate","REMOVE_PEER","close","filter","c","navigator","mediaDevices","getUserMedia","audio","video","width","height","localVideoElement","volume","startCapture","then","JOIN","room","catch","e","error","stop","LEAVE","provideMediaRef","id","node","useWebRTC","useParams","videoLayout","clientsNumber","pairs","Array","from","length","reduce","acc","next","index","arr","push","slice","rowsNumber","map","row","flat","layout","style","display","alignItems","justifyContent","flexWrap","clientID","ref","instance","autoPlay","playsInline","muted","Main","history","useHistory","rooms","updateRooms","rootNode","SHARE_ROOMS","onClick","v4","NotFound404","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.dd818d6d.chunk.js","sourcesContent":["import {useState, useCallback, useRef, useEffect} from 'react';\r\n\r\nconst useStateWithCallback = initialState => {\r\n  const [state, setState] = useState(initialState);\r\n  const cbRef = useRef(null);\r\n\r\n  const updateState = useCallback((newState, cb) => {\r\n    cbRef.current = cb;\r\n\r\n    setState(prev => typeof newState === 'function' ? newState(prev) : newState);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (cbRef.current) {\r\n      cbRef.current(state);\r\n      cbRef.current = null;\r\n    }\r\n  }, [state]);\r\n\r\n  return [state, updateState];\r\n}\r\n\r\nexport default useStateWithCallback;","import {io} from 'socket.io-client';\r\n\r\nconst options = {\r\n  \"force new connection\": true,\r\n  reconnectionAttempts: \"Infinity\", // avoid having user reconnect manually in order to prevent dead clients after a server restart\r\n  timeout : 10000, // before connect_error and connect_timeout are emitted.\r\n  transports : [\"websocket\"]\r\n}\r\n\r\nconst socket = io('/', options);\r\n\r\nexport default socket;","import {useEffect, useRef, useCallback} from 'react';\r\nimport freeice from 'freeice';\r\nimport useStateWithCallback from './useStateWithCallback';\r\nimport socket from '../socket';\r\nimport ACTIONS from '../socket/actions';\r\n\r\nexport const LOCAL_VIDEO = 'LOCAL_VIDEO';\r\n\r\n\r\nexport default function useWebRTC(roomID) {\r\n  const [clients, updateClients] = useStateWithCallback([]);\r\n\r\n  const addNewClient = useCallback((newClient, cb) => {\r\n    updateClients(list => {\r\n      if (!list.includes(newClient)) {\r\n        return [...list, newClient]\r\n      }\r\n\r\n      return list;\r\n    }, cb);\r\n  }, [clients, updateClients]);\r\n\r\n  const peerConnections = useRef({});\r\n  const localMediaStream = useRef(null);\r\n  const peerMediaElements = useRef({\r\n    [LOCAL_VIDEO]: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function handleNewPeer({peerID, createOffer}) {\r\n      if (peerID in peerConnections.current) {\r\n        return console.warn(`Already connected to peer ${peerID}`);\r\n      }\r\n\r\n      peerConnections.current[peerID] = new RTCPeerConnection({\r\n        iceServers: freeice(),\r\n      });\r\n\r\n      peerConnections.current[peerID].onicecandidate = event => {\r\n        if (event.candidate) {\r\n          socket.emit(ACTIONS.RELAY_ICE, {\r\n            peerID,\r\n            iceCandidate: event.candidate,\r\n          });\r\n        }\r\n      }\r\n\r\n      let tracksNumber = 0;\r\n      peerConnections.current[peerID].ontrack = ({streams: [remoteStream]}) => {\r\n        tracksNumber++\r\n\r\n        if (tracksNumber === 2) { // video & audio tracks received\r\n          tracksNumber = 0;\r\n          addNewClient(peerID, () => {\r\n            if (peerMediaElements.current[peerID]) {\r\n              peerMediaElements.current[peerID].srcObject = remoteStream;\r\n            } else {\r\n              // FIX LONG RENDER IN CASE OF MANY CLIENTS\r\n              let settled = false;\r\n              const interval = setInterval(() => {\r\n                if (peerMediaElements.current[peerID]) {\r\n                  peerMediaElements.current[peerID].srcObject = remoteStream;\r\n                  settled = true;\r\n                }\r\n\r\n                if (settled) {\r\n                  clearInterval(interval);\r\n                }\r\n              }, 1000);\r\n            }\r\n          });\r\n        }\r\n      }\r\n\r\n      localMediaStream.current.getTracks().forEach(track => {\r\n        peerConnections.current[peerID].addTrack(track, localMediaStream.current);\r\n      });\r\n\r\n      if (createOffer) {\r\n        const offer = await peerConnections.current[peerID].createOffer();\r\n\r\n        await peerConnections.current[peerID].setLocalDescription(offer);\r\n\r\n        socket.emit(ACTIONS.RELAY_SDP, {\r\n          peerID,\r\n          sessionDescription: offer,\r\n        });\r\n      }\r\n    }\r\n\r\n    socket.on(ACTIONS.ADD_PEER, handleNewPeer);\r\n\r\n    return () => {\r\n      socket.off(ACTIONS.ADD_PEER);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function setRemoteMedia({peerID, sessionDescription: remoteDescription}) {\r\n      await peerConnections.current[peerID]?.setRemoteDescription(\r\n        new RTCSessionDescription(remoteDescription)\r\n      );\r\n\r\n      if (remoteDescription.type === 'offer') {\r\n        const answer = await peerConnections.current[peerID].createAnswer();\r\n\r\n        await peerConnections.current[peerID].setLocalDescription(answer);\r\n\r\n        socket.emit(ACTIONS.RELAY_SDP, {\r\n          peerID,\r\n          sessionDescription: answer,\r\n        });\r\n      }\r\n    }\r\n\r\n    socket.on(ACTIONS.SESSION_DESCRIPTION, setRemoteMedia)\r\n\r\n    return () => {\r\n      socket.off(ACTIONS.SESSION_DESCRIPTION);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(ACTIONS.ICE_CANDIDATE, ({peerID, iceCandidate}) => {\r\n      peerConnections.current[peerID]?.addIceCandidate(\r\n        new RTCIceCandidate(iceCandidate)\r\n      );\r\n    });\r\n\r\n    return () => {\r\n      socket.off(ACTIONS.ICE_CANDIDATE);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleRemovePeer = ({peerID}) => {\r\n      if (peerConnections.current[peerID]) {\r\n        peerConnections.current[peerID].close();\r\n      }\r\n\r\n      delete peerConnections.current[peerID];\r\n      delete peerMediaElements.current[peerID];\r\n\r\n      updateClients(list => list.filter(c => c !== peerID));\r\n    };\r\n\r\n    socket.on(ACTIONS.REMOVE_PEER, handleRemovePeer);\r\n\r\n    return () => {\r\n      socket.off(ACTIONS.REMOVE_PEER);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function startCapture() {\r\n      localMediaStream.current = await navigator.mediaDevices.getUserMedia({\r\n        audio: true,\r\n        video: {\r\n          width: 1280,\r\n          height: 720,\r\n        }\r\n      });\r\n\r\n      addNewClient(LOCAL_VIDEO, () => {\r\n        const localVideoElement = peerMediaElements.current[LOCAL_VIDEO];\r\n\r\n        if (localVideoElement) {\r\n          localVideoElement.volume = 0;\r\n          localVideoElement.srcObject = localMediaStream.current;\r\n        }\r\n      });\r\n    }\r\n\r\n    startCapture()\r\n      .then(() => socket.emit(ACTIONS.JOIN, {room: roomID}))\r\n      .catch(e => console.error('Error getting userMedia:', e));\r\n\r\n    return () => {\r\n      localMediaStream.current.getTracks().forEach(track => track.stop());\r\n\r\n      socket.emit(ACTIONS.LEAVE);\r\n    };\r\n  }, [roomID]);\r\n\r\n  const provideMediaRef = useCallback((id, node) => {\r\n    peerMediaElements.current[id] = node;\r\n  }, []);\r\n\r\n  return {\r\n    clients,\r\n    provideMediaRef\r\n  };\r\n}","import {useParams} from 'react-router';\r\nimport useWebRTC, {LOCAL_VIDEO} from '../../hooks/useWebRTC';\r\n\r\nfunction layout(clientsNumber = 1) {\r\n  const pairs = Array.from({length: clientsNumber})\r\n    .reduce((acc, next, index, arr) => {\r\n      if (index % 2 === 0) {\r\n        acc.push(arr.slice(index, index + 2));\r\n      }\r\n\r\n      return acc;\r\n    }, []);\r\n\r\n  const rowsNumber = pairs.length;\r\n  const height = `${100 / rowsNumber}%`;\r\n\r\n  return pairs.map((row, index, arr) => {\r\n\r\n    if (index === arr.length - 1 && row.length === 1) {\r\n      return [{\r\n        width: '100%',\r\n        height,\r\n      }];\r\n    }\r\n\r\n    return row.map(() => ({\r\n      width: '50%',\r\n      height,\r\n    }));\r\n  }).flat();\r\n}\r\n\r\nexport default function Room() {\r\n  const {id: roomID} = useParams();\r\n  const {clients, provideMediaRef} = useWebRTC(roomID);\r\n  const videoLayout = layout(clients.length);\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      flexWrap: 'wrap',\r\n      height: '100vh',\r\n    }}>\r\n      {clients.map((clientID, index) => {\r\n        return (\r\n          <div key={clientID} style={videoLayout[index]} id={clientID}>\r\n            <video\r\n              width='100%'\r\n              height='100%'\r\n              ref={instance => {\r\n                provideMediaRef(clientID, instance);\r\n              }}\r\n              autoPlay\r\n              playsInline\r\n              muted={clientID === LOCAL_VIDEO}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}","import {useState, useEffect, useRef} from 'react';\r\nimport socket from '../../socket';\r\nimport ACTIONS from '../../socket/actions';\r\nimport {useHistory} from 'react-router';\r\nimport {v4} from 'uuid';\r\n\r\nexport default function Main() {\r\n  const history = useHistory();\r\n  const [rooms, updateRooms] = useState([]);\r\n  const rootNode = useRef();\r\n\r\n  useEffect(() => {\r\n    socket.on(ACTIONS.SHARE_ROOMS, ({rooms = []} = {}) => {\r\n      if (rootNode.current) {\r\n        updateRooms(rooms);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={rootNode}>\r\n      <h1>Available Rooms</h1>\r\n\r\n      <ul>\r\n        {rooms.map(roomID => (\r\n          <li key={roomID}>\r\n            {roomID}\r\n            <button onClick={() => {\r\n              history.push(`/room/${roomID}`);\r\n            }}>JOIN ROOM</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <button onClick={() => {\r\n        history.push(`/room/${v4()}`);\r\n      }}>Create New Room</button>\r\n    </div>\r\n  );\r\n}","export default function NotFound404() {\r\n  return (\r\n    <div>\r\n      NOT FOUND.\r\n    </div>\r\n  );\r\n}","import {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport Room from './pages/Room';\r\nimport Main from './pages/Main';\r\nimport NotFound404 from './pages/NotFound404';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path='/room/:id' component={Room}/>\r\n        <Route exact path='/' component={Main}/>\r\n        <Route component={NotFound404}/>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","const ACTIONS = {\r\n  JOIN: 'join',\r\n  LEAVE: 'leave',\r\n  SHARE_ROOMS: 'share-rooms',\r\n  ADD_PEER: 'add-peer',\r\n  REMOVE_PEER: 'remove-peer',\r\n  RELAY_SDP: 'relay-sdp',\r\n  RELAY_ICE: 'relay-ice',\r\n  ICE_CANDIDATE: 'ice-candidate',\r\n  SESSION_DESCRIPTION: 'session-description'\r\n};\r\n\r\nmodule.exports = ACTIONS;"],"sourceRoot":""}